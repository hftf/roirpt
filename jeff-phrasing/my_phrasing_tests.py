import my_phrasing

# print(obj_to_phrase(test_obj_1))
'were you'

tests = {
	"^KPWRAO*EBT": "will you not have been a",
	"KPWR*B":      "you are not",
	"^KPWR*B":     "are you not",
	"^KPWRERP":    "have you done",
	"^KPWRAOBLGD": "would you like",
	"KPWRAOUBLGD": "you would be liking",
	"SWR*BD":      "I was not",
	"^SWR*BD":     "was I not",
	"SWR*D":       "I did not",
	"^SWR*D":      "did I not",
	"KPWR*BD":     "you were not",
	"^KPWR*BD":    "were you not",
	"KPWR*D":      "you did not",
	"^KPWR*D":     "did you not",
	"KWHR*BD":     "he was not",
	"^KWHR*BD":    "was he not",
	"KWHR*D":      "he did not",
	"^KWHR*D":     "did he not",
	"SWR*B":       "I am not",
	"^SWR*B":      "am I not",
	"SWR*":        "I do not",
	"^SWR*":       "do I not",
	"KPWR*B":      "you are not",
	"^KPWR*B":     "are you not",
	"KPWR*":       "you do not",
	"^KPWR*":      "do you not",
	"KWHR*B":      "he is not",
	"^KWHR*B":     "is he not",
	"KWHR*":       "he does not",
	"^KWHR*":      "does he not",
	"SWRAO*RP":    "I will not do",
	"SWHAUPBLG":   "what you find",
	"SWROERPD":    "I should have done",
	"SWRO*ERPD":   "I should not have done",
	"SKPEUBGSZ":   "and I could",
	"TWRA*G":      "we cannot go",
	"^KPWRARLTD":  "could you tell",
	"^STWR-RPL":   "to remember",
	"^STWR*RPL":   "not to remember",
	"TWHA*":       "they cannot",
	"TWH-RPD":     "they did",
	"SKWHR*D":     "she did not",

	"^+KPWRAO*EBT": "won't you have been a",
	"+KPWR*B":      "you aren't",
	"^+KPWR*B":     "aren't you",
	"^+KPWRERP":    "have you done",
	"^+KPWRAOBLGD": "would you like",
	"+KPWRAOUBLGD": "you'd be liking",
	"+SWR*BD":      "I wasn't",
	"^+SWR*BD":     "wasn't I",
	"+SWR*D":       "I didn't",
	"^+SWR*D":      "didn't I",
	"+KPWR*BD":     "you weren't",
	"^+KPWR*BD":    "weren't you",
	"+KPWR*D":      "you didn't",
	"^+KPWR*D":     "didn't you",
	"+KWHR*BD":     "he wasn't",
	"^+KWHR*BD":    "wasn't he",
	"+KWHR*D":      "he didn't",
	"^+KWHR*D":     "didn't he",
	"+SWR*B":       "I'm not",
	"^+SWR*B":      "am I not", # aren't I
	"+SWR*":        "I don't",
	"^+SWR*":       "don't I",
	"+KPWR*B":      "you aren't",
	"^+KPWR*B":     "aren't you",
	"+KPWR*":       "you don't",
	"^+KPWR*":      "don't you",
	"+KWHR*B":      "he isn't",
	"^+KWHR*B":     "isn't he",
	"+KWHR*":       "he doesn't",
	"^+KWHR*":      "doesn't he",
	"+SWRAO*RP":    "I won't do",
	"+SWHAUPBLG":   "what you find",
	"+SWROERPD":    "I should have done",
	"+SWRO*ERPD":   "I shouldn't have done",
	"+SKPEUBGSZ":   "and I could",
	"+TWRA*G":      "we can't go",
	"^+KPWRARLTD":  "could you tell",
	"^+STWR-RPL":   "to remember",
	"^+STWR*RPL":   "not to remember",
	"+TWHA*":       "they can't",
	"+TWH-RPD":     "they did",
	"+SKWHR*D":     "she didn't",
	"SWHOGDZ":      "who gave",
	"^STHR-B":      "is there",
	"^SWRA":        "can I",
	"+KWHR*PTD":    "he didn't want to",
	"+STWR*BLD":    "didn't believe",
	"SWHA*PBLD":    "what it meant",
	"^TWHEG":       "have they gone",
	"KPWR*ES":      "you have not seen",
}

for test, expected in tests.items():
	result = my_phrasing.obj_to_phrase(my_phrasing.stroke_to_obj(test))
	print(f'Test: {test:24} Expect: {expected:40} Result: {result}')
	assert expected == result
